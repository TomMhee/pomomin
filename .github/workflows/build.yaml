name: Build & Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --verbose
        
      - name: List files (debug)
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Package.json main field:"
          node -e "console.log(require('./package.json').main)"
          
      - name: Build app
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: List build outputs
        run: |
          echo "Build directory contents:"
          ls -la dist/ || echo "No dist directory"
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()  # Only upload if build succeeded
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
          retention-days: 7
          if-no-files-found: warn
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && always()  # Run even if some builds failed
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
        continue-on-error: true  # Don't fail if some artifacts missing
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.exe
            artifacts/**/*.dmg
            artifacts/**/*.AppImage
            artifacts/**/*.deb
            artifacts/**/*.rpm
          generate_release_notes: true
          fail_on_unmatched_files: false  # Don't fail if some files missing
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}